[{"path":"https://simonpcouch.github.io/anyflights/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Contributions anyflights, whether form bug fixes, issue reports, new code documentation improvements encouraged welcome. particular interest increasing unit testing coverage, checking supplied arguments thoroughly, getting generated data packages pass R CMD CHECK variety edge cases. Maximal goofiness commit messages description issues/PRs, including limited emojis, excessive punctuation (!!!), ridiculous capitalization encouraged required. Please use snake case (get_flights) function names. Besides , general follow tidyverse style guide R.","code":""},{"path":"https://simonpcouch.github.io/anyflights/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, issues, contributions aligned Code Conduct. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant, version 1.0.0, available https://www.contributor-covenant.org/version/1/0/0/code--conduct.html","code":""},{"path":"https://simonpcouch.github.io/anyflights/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon P. Couch. Author, maintainer. Hadley Wickham. Contributor. Jay Lee. Contributor. Dennis Irorere. Contributor.","code":""},{"path":"https://simonpcouch.github.io/anyflights/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Couch S (2025). anyflights: Query 'nycflights13'-Like Air Travel Data Given Years Airports. R package version 0.3.4.9000, https://simonpcouch.github.io/anyflights/, https://github.com/simonpcouch/anyflights.","code":"@Manual{,   title = {anyflights: Query 'nycflights13'-Like Air Travel Data for Given Years and Airports},   author = {Simon P. Couch},   year = {2025},   note = {R package version 0.3.4.9000, https://simonpcouch.github.io/anyflights/},   url = {https://github.com/simonpcouch/anyflights}, }"},{"path":"https://simonpcouch.github.io/anyflights/index.html","id":"anyflights-","dir":"","previous_headings":"","what":"Query nycflights13-Like Air Travel Data for Given Years and Airports","title":"Query nycflights13-Like Air Travel Data for Given Years and Airports","text":"anyflights package supplies set functions generate air travel data (data packages!) similar nycflights13. user-defined year airport, anyflights function grab data : flights: flights departed given airport given year month weather: hourly meterological data given airport given year month airports: airport names, FAA codes, locations airlines: translation two letter carrier (airline) codes names planes: construction information plane found flights package also exports set functions query datasets individually. functions named get_* followed names datasets (shown code), require varying combination station (character vector FAA LID airport codes), year (integer), month (integer vector) arguments. Optionally, user can also supply dir argument (filepath folder) save resulting datasets. functions require strong connection run; expect several minutes runtime, especially anyflights get_flights functions. FAA usually posts data given year February March following year. airports FAA LID code supported, knowledge. Data queries earlier 2013 significantly less thoroughly tested 2013 .","code":""},{"path":"https://simonpcouch.github.io/anyflights/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Query nycflights13-Like Air Travel Data for Given Years and Airports","text":"anyflights now CRAN! Install following code: install developmental version, use following code:","code":"install.packages(\"anyflights\") #install.packages(\"remotes\") remotes::install_github(\"simonpcouch/anyflights\")"},{"path":"https://simonpcouch.github.io/anyflights/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Query nycflights13-Like Air Travel Data for Given Years and Airports","text":"grab named list 5 dataframes giving nycflights13-like air travel data Portland International Airport June 2019, call: grab original nycflights13 datasets, try: package also provides as_flights_package function create data-package data outputted anyflights. create package data, just supply name: check data-package pdxflights directory! üêõ used anyflights create data package, please link repository might feature ! Please submit outputted package CRAN similar repositories original packages.","code":"pdxflights19 <- anyflights(\"PDX\", 2019, 6) nycflights13_ <- anyflights(c(\"JFK\", \"LGA\", \"EWR\"), 2013) pdxflights19 %>%   as_flights_package(\"pdxflights\")"},{"path":"https://simonpcouch.github.io/anyflights/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Query nycflights13-Like Air Travel Data for Given Years and Airports","text":"Contributions anyflights, whether form bug fixes, issue reports, new code documentation improvements encouraged welcome. Please see CONTRIBUTING.md ‚Äôre interested contributing!","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"function generates list dataframes similar found nycflights13 data package US airports time frames. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"","code":"anyflights(station, year, month = 1:12, dir = NULL)"},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"station character vector giving origin US airports interest (FAA LID airport code). year numeric giving year interest. argument currently vectorized, dataset sizes single years significantly large. Information recent year usually available February March following year. month numeric giving month(s) interest. dir optional character string giving directory save datasets . default, datasets saved file.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"list dataframes (, optionally, directory datasets) similar found nycflights13 data package.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"anyflights() function wrapper around following functions: get_airlines: Grab data translate two letter   carrier codes names get_airports: Grab data airport names locations get_flights: Grab data flights departed   given US airports given year month get_planes: Grab construction information   plane get_weather: Grab hourly meterological data given   airport given year month recommended approach download data many stations (airports) supply vector stations station argument rather iterating many calls anyflights(). faa column dataframes outputted get_airports() provides FAA LID codes supported airports. See ?get_flights details implementation.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Air Travel Data ‚Äî anyflights","text":"","code":"# grab data on all flights departing from  # Portland International Airport in June 2019 and  # other useful metadata without saving to file if (FALSE) anyflights(\"PDX\", 2018, 6) # \\dontrun{}  # ...or, grab that same data and opt to save the  # file as well! (tempdir() can usually be specified  # as a character string giving the path to a folder) if (FALSE) anyflights(\"PDX\", 2018, 6, tempdir()) # \\dontrun{}"},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights_description.html","id":null,"dir":"Reference","previous_headings":"","what":"anyflights: `nycflights13`-Like Data for Specified Years and Airports ‚Äî anyflights_description","title":"anyflights: `nycflights13`-Like Data for Specified Years and Airports ‚Äî anyflights_description","text":"anyflights package supplies set functions generate nycflights13-like datasets data packages specified years airports.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/anyflights_description.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"anyflights: `nycflights13`-Like Data for Specified Years and Airports ‚Äî anyflights_description","text":"Maintainer: Simon P. Couch simonpatrickcouch@gmail.com contributors: Hadley Wickham hadley@rstudio.com [contributor] Jay Lee jaylee@reed.edu [contributor] Dennis Irorere denironyx@gmail.com [contributor]","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/as_flights_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Data Package from `anyflights` Data ‚Äî as_flights_package","title":"Generate a Data Package from `anyflights` Data ‚Äî as_flights_package","text":"Generate data-package, including documentation, data outputted `anyflights()` function. Please submit outputted package CRAN similar repositories original packages.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/as_flights_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Data Package from `anyflights` Data ‚Äî as_flights_package","text":"","code":"as_flights_package(data, name = make.names(deparse(substitute(data))))"},{"path":"https://simonpcouch.github.io/anyflights/reference/as_flights_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Data Package from `anyflights` Data ‚Äî as_flights_package","text":"data named list dataframes outputted anyflights. name desired name resulting package character string. package check supplied package name valid using regular expression .standard_regexps()$valid_package_name, save output directory name. Defaults make.names(deparse(substitute(data))).","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/as_flights_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Data Package from `anyflights` Data ‚Äî as_flights_package","text":"directory containing data-package built around supplied data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"function generates dataframe similar airlines dataset nycflights13 US airports time frame. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"","code":"get_airlines(dir = NULL, flights_data = NULL)"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"https://www.bts.gov/","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"dir optional character string giving directory save datasets . default, datasets saved file. flights_data Optional‚Äîeither filepath character string dataframe outputted get_flights used subset output include relevant carriers/planes. supplied, carriers/planes returned.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"data frame <2k rows 2 variables: carrier Two three length letter number abbreviation. cases whgere Unique Carrier Code use , suffix added.                ex. ML, ML (1). list matches `Reporting_Airline` field BTS documentation flights data set name Full name","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airlines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Airlines Data ‚Äî get_airlines","text":"","code":"# run with defaults if (FALSE) get_airlines() # \\dontrun{}  # if you'd like to only return the airline  # abbreviations only for airlines that appear in  # \\code{flights}, query your flights dataset first,  # and then supply it as a flights_data argument if (FALSE) get_airlines(flights_data = get_flights(\"PDX\", 2018, 6)) # \\dontrun{}"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Airports Data ‚Äî get_airports","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"function generates dataframe similar airports dataset nycflights13 US airports time frame. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"","code":"get_airports(dir = NULL)"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"`https://openflights.org/data.html`","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"dir optional character string giving directory save datasets . default, datasets saved file.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"data frame ~1350 rows 8 variables: faa FAA airport code name Usual name airport lat, lon Location airport alt Altitude, feet tz Timezone offset GMT/UTC dst Daylight savings time zone. = Standard US DST: starts     second Sunday March, ends first Sunday November.     U = unknown. N = dst. tzone IANA time zone, determined GeoNames webservice","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/get_airports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Airports Data ‚Äî get_airports","text":"","code":"# grab airports data if (FALSE) get_airports() # \\dontrun{}"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Flights Data ‚Äî get_flights","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"function generates dataframe similar flights dataset nycflights13 US airport time frame. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"","code":"get_flights(station, year, month = 1:12, dir = NULL, ...)"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"RITA, Bureau transportation statistics,  https://www.bts.gov","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"station character vector giving origin US airports interest (FAA LID airport code). year numeric giving year interest. argument currently vectorized, dataset sizes single years significantly large. Information recent year usually available February March following year. month numeric giving month(s) interest. dir optional character string giving directory save datasets . default, datasets saved file. ... Currently used internally.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"data frame ~1k-500k rows 19 variables: year, month, day Date departure dep_time, arr_time Actual departure arrival times, UTC. sched_dep_time, sched_arr_time Scheduled departure arrival   times, UTC. dep_delay, arr_delay Departure arrival delays, minutes.   Negative times represent early departures/arrivals. hour, minute Time scheduled departure broken hour   minutes. carrier Two letter carrier abbreviation. See   get_airlines get full name tailnum Plane tail number flight Flight number origin, dest Origin destination. See   get_airports additional metadata. air_time Amount time spent air, minutes distance Distance airports, miles time_hour Scheduled date hour flight   POSIXct date. Along origin, can used join   flights data weather data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"function currently downloads data stations month supplied, filters data relevant stations. Thus, recommended approach download data many airports supply vector airport codes station argument rather iterating many calls get_flights().","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"repeatedly getting timeout error downloading flights, download taking longer default timeout R option. can change timeout value R session running code options(timeout = timeout_value_in_seconds) console.","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/get_flights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Flights Data ‚Äî get_flights","text":"","code":"# flights out of Portland International in June 2018 if (FALSE) get_flights(\"PDX\", 2018, 6) # \\dontrun{}  # ...or the original nycflights13 flights dataset if (FALSE) get_flights(c(\"JFK\", \"LGA\", \"EWR\"), 2013) # \\dontrun{}  # use the dir argument to indicate the folder to  # save the data in \\code{dir} as \"flights.rda\" if (FALSE) get_flights(\"PDX\", 2018, 6, dir = tempdir()) # \\dontrun{}"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Planes Data ‚Äî get_planes","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"function generates dataframe similar planes dataset nycflights13 US airports time frame. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"","code":"get_planes(year, dir = NULL, flights_data = NULL)"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"FAA Aircraft registry,  https://www.faa.gov/licenses_certificates/aircraft_certification/aircraft_registry/releasable_aircraft_download","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"year numeric giving year interest. argument currently vectorized, dataset sizes single years significantly large. Information recent year usually available February March following year. dir optional character string giving directory save datasets . default, datasets saved file. flights_data Optional‚Äîeither filepath character string dataframe outputted get_flights used subset output include relevant carriers/planes. supplied, carriers/planes returned.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"data frame ~3500 rows 9 variables: tailnum Tail number year Year manufactured type Type plane manufacturer, model Manufacturer model engines, seats Number engines seats speed Average cruising speed mph engine Type engine","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/get_planes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Planes Data ‚Äî get_planes","text":"","code":"# grab airplanes data for 2018 if (FALSE) get_planes(2018) # \\dontrun{}  # if you'd like to only return the planes that appear  # in \\code{flights}, query your flights dataset first,  # and then supply it as a \\code{flights_data} argument if (FALSE) get_planes(2018,                   flights_data = get_flights(\"PDX\", 2018, 6)) # \\dontrun{}"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Query nycflights13-Like Weather Data ‚Äî get_weather","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"function generates dataframe similar weather dataset nycflights13 US airports time frame. Please note , even strong internet connection, function may take several minutes download relevant data.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"","code":"get_weather(station, year, month = 1:12, dir = NULL)"},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"ASOS download Iowa Environmental Mesonet,   https://mesonet.agron.iastate.edu/request/download.phtml","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"station character vector giving origin US airports interest (FAA LID airport code). year numeric giving year interest. argument currently vectorized, dataset sizes single years significantly large. Information recent year usually available February March following year. month numeric giving month(s) interest. dir optional character string giving directory save datasets . default, datasets saved file.","code":""},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"data frame ~1k-25k rows 15 variables: origin Weather station. Named origin facilitate   merging flights data year, month, day, hour Time recording, UTC temp, dewp Temperature dewpoint F humid Relative humidity wind_dir, wind_speed, wind_gust Wind direction (degrees),   speed gust speed (mph) precip Precipitation, inches pressure Sea level pressure millibars visib Visibility miles time_hour Date hour recording POSIXct   date, UTC","code":""},{"path":[]},{"path":"https://simonpcouch.github.io/anyflights/reference/get_weather.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query nycflights13-Like Weather Data ‚Äî get_weather","text":"","code":"# query weather at Portland International in June 2018 if (FALSE) get_weather(\"PDX\", 2018, 6) # \\dontrun{}  # ...or the original nycflights13 weather dataset if (FALSE) get_weather(c(\"JFK\", \"LGA\", \"EWR\"), 2013) # \\dontrun{}  # use the dir argument to indicate the folder to  # save the data in as \"weather.rda\" if (FALSE) get_weather(\"PDX\", 2018, 6, dir = tempdir()) # \\dontrun{}"}]
